(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{482:function(t,e,a){"use strict";a.r(e);var s=a(1),v=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"谈一谈你对-vue-的理解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#谈一谈你对-vue-的理解"}},[t._v("#")]),t._v(" 谈一谈你对 Vue 的理解")]),t._v(" "),e("blockquote",[e("p",[t._v("官方：Vue 是一套用于构建用户界面的渐进式框架，Vue 的核心库只关注视图层")])]),t._v(" "),e("ul",[e("li",[t._v("声明式框架：更注重结果，使用简单")]),t._v(" "),e("li",[t._v("MVVM：职责划分，分层管理，数据驱动")]),t._v(" "),e("li",[t._v("虚拟 Dom + Diff 算法：批量更新，提升性能，便于跨端")]),t._v(" "),e("li",[t._v("组件化：复用性、降低更新范围")])]),t._v(" "),e("h2",{attrs:{id:"vue-2-的生命周期钩子有哪些-数据请求放在哪个钩子"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-2-的生命周期钩子有哪些-数据请求放在哪个钩子"}},[t._v("#")]),t._v(" Vue 2 的生命周期钩子有哪些？数据请求放在哪个钩子？")]),t._v(" "),e("p",[t._v("Vue 2 文档写得很清楚，红色空心框中的文字皆为生命周期钩子：")]),t._v(" "),e("ul",[e("li",[t._v("create x 2 (before + ed) - SSR")]),t._v(" "),e("li",[t._v("mount x 2")]),t._v(" "),e("li",[t._v("update x 2")]),t._v(" "),e("li",[t._v("destroy x 2")])]),t._v(" "),e("p",[t._v("还有三个写在钩子列表里：")]),t._v(" "),e("ul",[e("li",[t._v("activated")]),t._v(" "),e("li",[t._v("deactivated")]),t._v(" "),e("li",[t._v("errorCaptured")])]),t._v(" "),e("p",[t._v("请求放在 mounted 里面，因为放在其他地方都不合适（xjb 扯）。")]),t._v(" "),e("h2",{attrs:{id:"组件间通信方式有哪些"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#组件间通信方式有哪些"}},[t._v("#")]),t._v(" 组件间通信方式有哪些？")]),t._v(" "),e("ul",[e("li",[t._v("父子组件：使用「props 和事件」进行通信")]),t._v(" "),e("li",[t._v("爷孙组件：\n"),e("ul",[e("li",[t._v("使用两次父子组件间通信来实现")]),t._v(" "),e("li",[t._v("使用「provide + inject」来通信")])])]),t._v(" "),e("li",[t._v("任意组件：使用 "),e("code",[t._v("eventBus = new Vue()")]),t._v(" 来通信\n"),e("ul",[e("li",[t._v("主要 API 是 eventBus.$on 和 eventBus.$emit")]),t._v(" "),e("li",[t._v("缺点是事件多了就很乱，难以维护")])])]),t._v(" "),e("li",[t._v("任意组件：使用 Vuex 通信（Vue 3 可用 Pinia 代替 Vuex）")])]),t._v(" "),e("h2",{attrs:{id:"vuex-用过吗-怎么理解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vuex-用过吗-怎么理解"}},[t._v("#")]),t._v(" Vuex 用过吗？怎么理解？")]),t._v(" "),e("blockquote",[e("p",[t._v("背下文档第一句：Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式 + 库")])]),t._v(" "),e("p",[t._v("说出核心概念的名字和作用：store/State/Getter/Mutation/Action/Module")]),t._v(" "),e("ul",[e("li",[t._v("store 是个大容器，包含以下所有内容")]),t._v(" "),e("li",[t._v("State 用来读取状态，带有一个 mapState 辅助函数")]),t._v(" "),e("li",[t._v("Getter 用来读取派生状态，附有一个 mapGetters 辅助函数")]),t._v(" "),e("li",[t._v("Mutation 用于同步提交状态变更，附有一个 mapMutations 辅助函数")]),t._v(" "),e("li",[t._v("Action 用于异步变更状态，但它提交的是 mutation，而不是直接变更状态。")]),t._v(" "),e("li",[t._v("Module 用来给 store 划分模块，方便维护代码")])]),t._v(" "),e("p",[t._v("常见追问：Mutation 和 Action 为什么要分开？")]),t._v(" "),e("p",[t._v("答案：为了让代码更易于维护。（可是 Pinia 就把 Mutation 和 Action 合并了呀）")]),t._v(" "),e("h2",{attrs:{id:"vuerouter-用过吗-怎么理解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vuerouter-用过吗-怎么理解"}},[t._v("#")]),t._v(" VueRouter 用过吗？怎么理解？")]),t._v(" "),e("blockquote",[e("p",[t._v("Vue Router 是 Vue.js 的官方路由。它与 Vue.js 核心深度集成，让用 Vue.js 构建单页应用变得轻而易举。")])]),t._v(" "),e("p",[t._v("说出核心概念的名字和作用：router-link router-view 嵌套路由、Hash 模式和 History 模式、导航守卫、懒加载")]),t._v(" "),e("p",[t._v("常见追问：Hash 模式和 History 模式的区别？")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("一个用的 Hash，一个用的 History API")])]),t._v(" "),e("li",[e("p",[t._v("一个不需要后端 nginx 配合，一个需要")])])]),t._v(" "),e("p",[t._v("导航守卫如何实现登录控制？")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("router"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeEach")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("to"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" from"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("to"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("path "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/login'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("to是受控页面 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" 没有登录"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/login'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("h2",{attrs:{id:"vue-2-是如何实现双向绑定的"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-2-是如何实现双向绑定的"}},[t._v("#")]),t._v(" Vue 2 是如何实现双向绑定的？")]),t._v(" "),e("p",[t._v("一般使用 v-model / .sync 实现，"),e("code",[t._v("v-model")]),t._v(" 是 v-bind:value 和 v-on:input 的语法糖")]),t._v(" "),e("p",[t._v("v-bind:value 实现了 data ⇒ UI 的单向绑定\nv-on:input 实现了 UI ⇒ data 的单向绑定")]),t._v(" "),e("p",[t._v("加起来就是双向绑定了")]),t._v(" "),e("p",[t._v("这两个单向绑定是如何实现的呢？")]),t._v(" "),e("p",[t._v("前者通过 Object.defineProperty API 给 data 创建 getter 和 setter，用于监听 data 的改变，data 一变就会安排改变 UI\n后者通过 template compiler 给 DOM 添加事件监听，DOM input 的值变了就会去修改 data。")]),t._v(" "),e("h2",{attrs:{id:"vue-3-为什么使用-proxy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-3-为什么使用-proxy"}},[t._v("#")]),t._v(" Vue 3 为什么使用 Proxy？")]),t._v(" "),e("p",[t._v("1、弥补 Object.defineProperty 的两个不足")]),t._v(" "),e("ul",[e("li",[t._v("动态创建的 data 属性需要用 Vue.set 来赋值，Vue 3 用了 Proxy 就不需要了")]),t._v(" "),e("li",[t._v("基于性能考虑，Vue 2 篡改了数组的 7 个 API，Vue 3 用了 Proxy 就不需要了")])]),t._v(" "),e("p",[t._v("2、defineProperty 需要提前递归地遍历 data 做到响应式，而 Proxy 可以在真正用到深层数据的时候再做响应式（惰性）")]),t._v(" "),e("h2",{attrs:{id:"vue-3-为什么使用-composition-api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-3-为什么使用-composition-api"}},[t._v("#")]),t._v(" Vue 3 为什么使用 Composition API？")]),t._v(" "),e("p",[t._v("1、Composition API 比 mixins、高阶组件、extends、Renderless Components 等更好，原因有三：")]),t._v(" "),e("ul",[e("li",[t._v("模版中的数据来源不清晰。")]),t._v(" "),e("li",[t._v("命名空间冲突。")]),t._v(" "),e("li",[t._v("性能。")])]),t._v(" "),e("p",[t._v("2、更适合 TypeScript")]),t._v(" "),e("h2",{attrs:{id:"vue-3-对比-vue-2-的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-3-对比-vue-2-的区别"}},[t._v("#")]),t._v(" Vue 3 对比 Vue 2 的区别")]),t._v(" "),e("ul",[e("li",[t._v("Vue3 更注重模块化，解决Vue2中模块无法单独使用的问题")]),t._v(" "),e("li",[t._v("响应式的实现使用Proxy代替Vue2中的defineProperty")]),t._v(" "),e("li",[t._v("优化diff算法，在原有的双端交叉算法的基础上引入最长递增子序列的算法")]),t._v(" "),e("li",[t._v("Vue3 模板编译优化\n"),e("ul",[e("li",[t._v("patchFlags标记动态节点")]),t._v(" "),e("li",[t._v("blockTree靶向更新")]),t._v(" "),e("li",[t._v("静态提升")]),t._v(" "),e("li",[t._v("预字符串处理")]),t._v(" "),e("li",[t._v("函数缓存")])])]),t._v(" "),e("li",[t._v("新特性\n"),e("ul",[e("li",[t._v("Composition API")]),t._v(" "),e("li",[e("code",[t._v("<script setup>")])]),t._v(" "),e("li",[t._v("Teleport")]),t._v(" "),e("li",[t._v("Fragment")]),t._v(" "),e("li",[e("code",[t._v("v-bind")]),t._v(" in style")]),t._v(" "),e("li",[t._v("createApp() 代替了 new Vue()")]),t._v(" "),e("li",[t._v("v-model 代替了以前的 v-model 和 .sync")]),t._v(" "),e("li",[t._v("destroyed 被改名为 unmounted 了（before 当然也改了）")])])])])])}),[],!1,null,null,null);e.default=v.exports}}]);